[{"D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\index.js":"1","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\App.js":"2","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\reportWebVitals.js":"3","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\ListView.js":"4","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\Publisher.js":"5","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\BookCard.js":"6","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\Skeleton.js":"7","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\AppBar.js":"8","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\ModalForm.js":"9","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\User.js":"10","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\Layout.js":"11","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\Book.js":"12","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\Review.js":"13","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\Login.js":"14"},{"size":495,"mtime":1611307198428,"results":"15","hashOfConfig":"16"},{"size":307,"mtime":1614357610062,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1429,"mtime":1611145384728,"results":"19","hashOfConfig":"16"},{"size":9350,"mtime":1614348476945,"results":"20","hashOfConfig":"21"},{"size":1269,"mtime":1611659988908,"results":"22","hashOfConfig":"21"},{"size":3503,"mtime":1611301603574,"results":"23","hashOfConfig":"16"},{"size":2591,"mtime":1611665480151,"results":"24","hashOfConfig":"21"},{"size":6680,"mtime":1614282243171,"results":"25","hashOfConfig":"21"},{"size":11253,"mtime":1614287729262,"results":"26","hashOfConfig":"21"},{"size":721,"mtime":1611657888439,"results":"27","hashOfConfig":"21"},{"size":11681,"mtime":1614286384159,"results":"28","hashOfConfig":"21"},{"size":696,"mtime":1611826720123,"results":"29","hashOfConfig":"21"},{"size":10494,"mtime":1614367393647,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"106idt3",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"vke1ue",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\index.js",[],["71","72"],"D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\App.js",[],"D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\reportWebVitals.js",[],"D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\ListView.js",["73"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass ListView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.state = {\r\n            list: [],\r\n            name: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://127.0.0.1:8000/api/warehouses/`).then(res => {\r\n            this.setState({\r\n                list: res.data.map(warehouse => { return warehouse[\"location\"]})\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        axios.post(`http://127.0.0.1:8000/api/warehouses/add/`,\r\n            { location: this.state.name }).\r\n            then(res => { console.log(res); });\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul>\r\n                {this.state.list.map(elem => { return <li>{elem}</li> })}\r\n                <form onSubmit={this.onSubmit} >\r\n                    <label>\r\n                        Location:\r\n                        <input type=\"text\" name=\"location\" onChange={this.onChange} />\r\n                        <input type=\"submit\" value=\"Add Location\" />\r\n                    </label>\r\n                </form>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListView;",["74","75"],"D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\Publisher.js",["76"],"import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport SimpleCard from './BookCard'\r\nimport './Styles/Publisher.css'\r\nimport DefaultAppBar from './AppBar'\r\nimport ModalForm from './ModalForm'\r\nimport Layout from './Layout'\r\n\r\nclass Publisher extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loaded: false,\r\n            publisher: \"S.Chand\",\r\n            loadModal: false,\r\n            publishes: [],\r\n            book_name: \"\",\r\n            price: \"\",\r\n            genre: \"\",\r\n            language: \"\",\r\n            openDialog: false,\r\n            openSnackbar: false\r\n        };\r\n        this.onEdit = this.onEdit.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.loadAgain = this.loadAgain.bind(this);\r\n        this.onCloseDialog = this.onCloseDialog.bind(this);\r\n        this.deletePublication = this.deletePublication.bind(this);\r\n        this.openSnackbar = this.openSnackbar.bind(this);\r\n        this.closeSnackbar = this.closeSnackbar.bind(this);\r\n        this.onAdd = this.onAdd.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://bharatekkhoj.herokuapp.com/api/books/pubs/${this.state.publisher}`).then(res => {\r\n            this.setState({\r\n                publishes: res.data,\r\n                loaded: true,\r\n                publicationId: \"pub\"\r\n            });\r\n        });\r\n    }\r\n\r\n    onEdit(e, bname, price_, genre_, language_) {\r\n        console.log(bname);\r\n        this.setState({\r\n            book_name: bname,\r\n            price: price_,\r\n            genre: genre_,\r\n            language: language_,\r\n            loadModal: true,\r\n            canUpdate:true\r\n        });\r\n    }\r\n\r\n    onAdd(e, bname, price_, genre_, language_) {\r\n        console.log(bname);\r\n        this.setState({\r\n            loadModal: true,\r\n            canUpdate: false\r\n        });\r\n    }\r\n\r\n    loadAgain() {\r\n        console.log(this.state.publisher);\r\n        axios.get(`http://bharatekkhoj.herokuapp.com/api/books/pubs/${this.state.publisher}`).then(res => {\r\n            this.setState({\r\n                publishes: res.data,\r\n            });\r\n        });\r\n    }\r\n\r\n    onCloseDialog(e) {\r\n        this.setState({\r\n            openDialog: false\r\n        });\r\n    }\r\n\r\n    openDeletionDialog(e,name) {\r\n        this.setState({\r\n            openDialog: true,\r\n            book_name: name\r\n        });\r\n    }\r\n\r\n    deletePublication(e, name) {\r\n        console.log(this.state.book_name);\r\n        axios.get(`http://bharatekkhoj.herokuapp.com/api/books/delete/${this.state.book_name}`).then(res => { console.log(res); });\r\n        this.setState({\r\n            openDialog: false\r\n        });\r\n        axios.get(`http://bharatekkhoj.herokuapp.com/api/books/pubs/${this.state.publisher}`).then(res => {\r\n            this.setState({\r\n                publishes: res.data,\r\n            });\r\n        });\r\n    }\r\n\r\n    closeModal(e) {\r\n        this.setState({\r\n            loadModal: false,\r\n            book_name: \"\"\r\n        });\r\n    }\r\n\r\n    openSnackbar(e) {\r\n        this.setState({\r\n            openSnackbar: true\r\n        });\r\n    }\r\n\r\n\r\n    closeSnackbar(e) {\r\n        this.setState({\r\n            openSnackbar: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout AppBarHeading='Publisher' AppBarChild={(\r\n                    <Button href={'#pub'}>\r\n                        <Typography variant=\"subtitle2\" style={{ color: \"white\" }}>\r\n                            Your Publications\r\n                                </Typography>\r\n                    </Button>\r\n                )}\r\n                    heading={this.state.publisher}>\r\n                <Container className=\"Cont\" id=\"pub\">\r\n                    <Typography variant=\"h4\" align=\"left\">\r\n                        Your Publications\r\n                    </Typography>\r\n                    <Grid container spacing={3} className=\"booksCont\">\r\n                        {\r\n                            this.state.publishes.map(publish => {\r\n                                return (\r\n                                    <Grid item lg={3} key={publish.id}>\r\n                                        <SimpleCard csName=\"crd\" TooltipText={publish.bname}\r\n                                            TooltipPlacement=\"top-start\"\r\n                                            style={{ marginTop: 15 }}\r\n                                            book_name={publish.bname} price={publish.price} genre={publish.genre}\r\n                                            language={publish.language}\r\n                                            >\r\n                                            <Typography variant=\"h5\" component=\"h2\" noWrap>\r\n                                                {publish.bname}\r\n                                            </Typography>\r\n                                            <Typography color=\"textSecondary\">\r\n                                                Price: Rs.{publish.price}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" component=\"p\">\r\n                                                Genre: {publish.genre}\r\n                                                <br />\r\n                                                Language: {publish.lang}\r\n                                            </Typography>\r\n                                            <Button style={{ marginTop: 20 }} variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                onClick={(e) => this.onEdit(e, publish.bname, publish.price, publish.genre, publish.lang)}>\r\n                                                Edit\r\n                                            </Button>\r\n                                            <Button style={{ marginTop: 20, marginLeft: 10 }} variant=\"contained\"\r\n                                                color=\"secondary\" onClick={(e) => { this.openDeletionDialog(e, publish.bname); }}>\r\n                                                Delete\r\n                                            </Button>\r\n                                        </SimpleCard>\r\n                                    </Grid>\r\n                                    );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                    <ModalForm open={this.state.loadModal} onClose={() => this.closeModal()}\r\n                        closeModal={this.closeModal}\r\n                        book_name={this.state.book_name} price={this.state.price} genre={this.state.genre}\r\n                        language={this.state.language} publisher={this.state.publisher}\r\n                        loadAgain={this.loadAgain} openSnackbar={this.openSnackbar} canUpdate={this.state.canUpdate} />\r\n                    <Dialog open={this.state.openDialog} onClose={this.onCloseDialog}>\r\n                        <DialogTitle>Delete the publication</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>Are you sure, you want to delete the publication?</DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" onClick={this.onCloseDialog}>Cancel</Button>\r\n                            <Button color=\"secondary\" onClick={this.deletePublication}>Okay</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Snackbar open={this.state.openSnackbar} onClose={this.closeSnackbar}\r\n                        anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\r\n                        message={\"Book \"+((this.state.canUpdate)?\"updated\":\"added\") + \", refresh page to view the changes\"}\r\n                        autoHideDuration={5000} action={\r\n                            <IconButton onClick={this.closeSnackbar}>\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        } />\r\n                    <Fab color=\"primary\" variant=\"extended\" style={{\r\n                        position: \"fixed\",\r\n                        bottom: 20,\r\n                        right: 20\r\n                    }} onClick={ this.onAdd}>\r\n                        <AddIcon />\r\n                        Add a Publication\r\n                    </Fab>\r\n                    </Container>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Publisher;",["77","78"],"D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\BookCard.js",["79","80"],"import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport './Styles/BookCard.css'\r\n\r\nclass SimpleCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.state = {\r\n            book_name: this.props.book_name,\r\n            price: this.price,\r\n            genre: this.genre,\r\n            language: this.language\r\n        }\r\n    }\r\n\r\n    onClick(e) {\r\n        e.preventDefault();\r\n        console.log(\"Clicked\");\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Tooltip title={this.props.TooltipText} arrow={true} placement={this.props.TooltipPlacement} >\r\n                    <Card className={this.props.csName}>\r\n                        <CardContent className={this.props.csName + '-content'}>\r\n                            {this.props.children}\r\n                        </CardContent>\r\n                    </Card>\r\n                </Tooltip>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SimpleCard;","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\Skeleton.js",[],"D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\AppBar.js",["81","82","83"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport PersonOutlineTwoToneIcon from '@material-ui/icons/PersonOutlineTwoTone';\r\n\r\nimport './Styles/AppBar.css'\r\n\r\nclass DefaultAppBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            heading: this.props.heading,\r\n            menuState: false,\r\n            MenuAnchor: null,\r\n            drawerState: false\r\n        };\r\n        this.profileClicked = this.profileClicked.bind(this);\r\n        this.profileClosed = this.profileClosed.bind(this);\r\n    }\r\n\r\n    profileClosed(e) {\r\n        this.setState({\r\n            menuState: false,\r\n            MenuAnchor: null\r\n        });\r\n    }\r\n\r\n    profileClicked(e) {\r\n        this.setState({\r\n            menuState: true,\r\n            MenuAnchor: e.currentTarget\r\n        });\r\n        console.log(e.currentTarget);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"root\">\r\n                <AppBar position=\"fixed\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h5\" className=\"title\">\r\n                            { this.state.heading}\r\n                        </Typography>\r\n                        <div style={{ position: \"fixed\", right: 100, display: \"flex\" }}>\r\n                            {this.props.child}\r\n                            <Button className=\"profile\" color=\"inherit\" onClick={this.profileClicked}>\r\n                                <PersonOutlineTwoToneIcon/>\r\n                            </Button>\r\n                        </div>\r\n                        <Menu open={this.state.menuState} anchorEl={this.state.MenuAnchor} onClose={this.profileClosed}\r\n                            getContentAnchorEl={null}\r\n                            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                            transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                        >\r\n                            <MenuItem>Logout</MenuItem>\r\n                        </Menu>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DefaultAppBar;\r\n","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\ModalForm.js",[],["84","85"],"D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\User.js",["86"],"import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Layout from './Layout'\r\nimport SimpleCard from './BookCard'\r\n\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextareaAutosize } from '@material-ui/core'\r\n\r\nclass User extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            username: \"adityamd\",\r\n            subscribers: [],\r\n            booksPublishers: [],\r\n            booksSubscribed: [],\r\n            writeReview: false,\r\n            reviewValue: \"\",\r\n            bookReviewed: \"\",\r\n            posted: false\r\n        });\r\n        this.writeReview = this.writeReview.bind(this);\r\n        this.closeDialog = this.closeDialog.bind(this);\r\n        this.textChanged = this.textChanged.bind(this);\r\n        this.postReview = this.postReview.bind(this);\r\n        this.closeAlert = this.closeAlert.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var publishes = [];\r\n\r\n        axios.get(`http://bharatekkhoj.herokuapp.com/api/subscribes/${this.state.username}`).then(res => {\r\n            this.setState({\r\n                subscribers: res.data\r\n            });\r\n            for (let i = 0; i < this.state.subscribers.length; i++) {\r\n                axios.get(`http://bharatekkhoj.herokuapp.com/api/books/pubs/i/${this.state.subscribers[i].publisher}`).then(\r\n                    res => {\r\n                        publishes = publishes.concat(res.data);\r\n                        console.log(publishes);\r\n                        this.setState({\r\n                            booksPublishers: publishes\r\n                        });\r\n                        console.log(this.state.booksPublishers);\r\n                    }\r\n                );\r\n            }\r\n        })\r\n\r\n        axios.get(`http://bharatekkhoj.herokuapp.com/api/purchases/${this.state.username}/`).then(res => {\r\n            this.setState({\r\n                booksSubscribed: res.data\r\n            });\r\n            console.log(res.data)\r\n        })\r\n    }\r\n\r\n    closeAlert(e) {\r\n        this.setState({\r\n            posted: false\r\n        });\r\n    }\r\n\r\n    writeReview(e,bname) {\r\n        this.setState({\r\n            writeReview: true,\r\n            bookReviewed: bname\r\n        });\r\n    }\r\n\r\n    postReview(e) {\r\n        var d = new Date();\r\n        axios.post(`http://bharatekkhoj.herokuapp.com/api/reviews/add/`, {\r\n            user: this.state.username,\r\n            book: this.state.bookReviewed,\r\n            review: this.state.reviewValue,\r\n            date_posted: d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate()\r\n        }).then(res => { console.log(res); });\r\n\r\n        this.setState({\r\n            reviewValue: \"\",\r\n            writeReview: false,\r\n            posted: true\r\n        });\r\n    }\r\n\r\n    closeDialog(e) {\r\n        this.setState({\r\n            writeReview: false,\r\n            reviewValue: \"\",\r\n            bookReviewed: \"\"\r\n        });\r\n    }\r\n\r\n    textChanged(e) {\r\n        this.setState({\r\n            reviewValue: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout AppBarHeading=\"User\" AppBarChild={(\r\n                    <div>\r\n                        <Button href=\"#otherBooks\" style={{color:\"white\"}}>More books</Button>\r\n                        <Button href=\"#purchasedBooks\" style={{ color: \"white\" }}>Purchased books</Button>\r\n                    </div>\r\n                    )} heading={\"Hi, \" + this.state.username} >\r\n                    <Container style={{ width: 10000 }} id=\"otherBooks\">\r\n                        <Accordion defaultExpanded>\r\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                                <Typography variant=\"h6\">\r\n                                    More From Publishers You Have Subscribed To\r\n                                </Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                                <Grid container spacing={2}>\r\n                                    {\r\n                                        this.state.booksPublishers.map(publish => {\r\n                                            return (\r\n                                                <Grid item lg={3} key={publish.id}>\r\n                                                    <SimpleCard csName=\"crd\" TooltipText={publish.bname}\r\n                                                        TooltipPlacement=\"top-start\"\r\n                                                        style={{ marginTop: 15 }}\r\n                                                        book_name={publish.bname} price={publish.price} genre={publish.genre}\r\n                                                        language={publish.language}\r\n                                                    >\r\n                                                        <Typography variant=\"h5\" component=\"h2\" noWrap>\r\n                                                            {publish.bname}\r\n                                                        </Typography>\r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Price: Rs.{publish.price}\r\n                                                        </Typography>\r\n                                                        <Typography variant=\"body2\" component=\"p\">\r\n                                                            Genre: {publish.genre}\r\n                                                            <br />\r\n                                                            Language: {publish.lang}\r\n                                                        </Typography>\r\n                                                        <Button color=\"primary\" style={{ marginTop: 20 }} variant=\"contained\">\r\n                                                            View\r\n                                                        </Button>\r\n                                                    </SimpleCard>\r\n                                                </Grid>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </Grid>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Container>\r\n\r\n                    <Container style={{ marginTop: 40 }} id=\"purchasedBooks\">\r\n                        <Accordion defaultExpanded>\r\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                                <Typography variant=\"h6\">\r\n                                    Books You Have Purchased\r\n                                </Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                                <Grid container spacing={2}>\r\n                                    {\r\n                                        this.state.booksSubscribed.map(publish => {\r\n                                            return (\r\n                                                <Grid item lg={3} key={publish.id}>\r\n                                                    <SimpleCard csName=\"crd\" TooltipText={publish.bname}\r\n                                                        TooltipPlacement=\"top-start\"\r\n                                                        style={{ marginTop: 15 }}\r\n                                                        book_name={publish.bname} price={publish.price} genre={publish.genre}\r\n                                                        language={publish.language}\r\n                                                    >\r\n                                                        <Typography variant=\"h5\" component=\"h2\" noWrap>\r\n                                                            {publish.bname}\r\n                                                        </Typography>\r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Price: Rs.{publish.price}\r\n                                                        </Typography>\r\n                                                        <Typography variant=\"body2\" component=\"p\">\r\n                                                            Genre: {publish.genre}\r\n                                                            <br />\r\n                                                            Language: {publish.lang}\r\n                                                        </Typography>\r\n                                                        <Button onClick={(e)=>{this.writeReview(e,publish.bname);}} \r\n                                                    color=\"primary\" style={{ marginTop: 20 }} variant=\"contained\">\r\n                                                            Write a review\r\n                                                        </Button>\r\n                                                    </SimpleCard>\r\n                                                </Grid>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </Grid>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Container>\r\n                </Layout>\r\n                <Dialog open={this.state.writeReview} onClose={this.closeDialog} >\r\n                    <DialogTitle>\r\n                        Write a Review\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <DialogContentText>\r\n                            <TextareaAutosize rows={50} cols={ 75} rowsMax={15} rowsMin={1} onChange={this.textChanged}/>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={this.closeDialog} > Cancel</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.postReview}>Post</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Snackbar open={this.state.posted} autoHideDuration={5000} onClose={this.closeAlert}>\r\n                    <Alert severity=\"success\" onClose={this.closeAlert} variant=\"standard\" >\r\n                        Review Posted\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\Layout.js",["87","88"],"import React from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport DefaultAppBar from './AppBar'\r\n\r\nclass Layout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <DefaultAppBar heading={this.props.AppBarHeading} child={this.props.AppBarChild} />\r\n                <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\" className=\"heading\">\r\n                    {this.props.heading}\r\n                </Typography>\r\n                    {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\Book.js",["89"],"import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Layout from './Layout'\r\nimport './Styles/Book.css'\r\nimport Review from './Review.js'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport RateReviewIcon from '@material-ui/icons/RateReview'\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { Dialog, DialogContent, DialogActions, DialogContentText, DialogTitle, ListItem, ListSubheader, TextField, Snackbar } from '@material-ui/core'\r\n\r\nclass Book extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            book_name: \"Database Design\",\r\n            publisher: \"S.Chand\",\r\n            price: 60,\r\n            genre: \"Drama\",\r\n            language: \"Hindi\",\r\n            synopsis: \"This book is for both professionals and students who wish to make a career as a database designer or some related field. It talks about various databases, approaches regarding designing a database and maintaining it and lastly, talking about the future of databases.\",\r\n            reviews: [],\r\n            user: \"adityamd\",\r\n            subscribed: true,\r\n            reviewValue: \"\",\r\n            openDialogBox: false,\r\n            posted: false,\r\n            bookPurchased: false,\r\n            purchased: false\r\n        };\r\n        this.subscribed = this.subscribed.bind(this);\r\n        this.addSubscription = this.addSubscription.bind(this);\r\n        this.deleteSubscription = this.deleteSubscription.bind(this);\r\n        this.postReview = this.postReview.bind(this);\r\n        this.onReviewChange = this.onReviewChange.bind(this);\r\n        this.openDialogBox = this.openDialogBox.bind(this);\r\n        this.closeDialogBox = this.closeDialogBox.bind(this);\r\n        this.closeAlert = this.closeAlert.bind(this);\r\n        this.closePurchasedDB = this.closePurchasedDB.bind(this);\r\n        this.purchaseBook = this.purchaseBook.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://bharatekkhoj.herokuapp.com/api/reviews/${this.state.book_name}/`).then(res => {\r\n            this.setState({\r\n                reviews: res.data\r\n            });\r\n        });\r\n    }\r\n\r\n    onReviewChange(e) {\r\n        this.setState({\r\n            reviewValue: e.target.value\r\n        });\r\n    }\r\n\r\n    addSubscription() {\r\n        axios.post(`http://bharatekkhoj.herokuapp.com/api/subscribes/add/publisher/`, {\r\n            users: this.state.user,\r\n            publisher: this.state.publisher\r\n        }).then(res => { console.log(res); });\r\n    }\r\n\r\n    deleteSubscription() {\r\n        axios.get(`http://bharatekkhoj.herokuapp.com/api/subscribes/delete/${this.state.user}/${this.state.publisher}/`).then(\r\n            res => { console.log(res);}\r\n        );\r\n    }\r\n\r\n    purchaseBook(e) {\r\n        axios.post(`http://bharatekkhoj.herokuapp.com/api/purchases/added/p`, {\r\n            user: this.state.user,\r\n            book: this.state.book_name\r\n        }).then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n                purchased: true\r\n            })\r\n        });\r\n    }\r\n\r\n    postReview(e) {\r\n        var d = new Date();\r\n        axios.post(`http://bharatekkhoj.herokuapp.com/api/reviews/add/`,{\r\n            user:  this.state.user ,\r\n            book: this.state.book_name,\r\n            review: this.state.reviewValue,\r\n            date_posted: d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate()\r\n        }).then(res => { console.log(res); });\r\n\r\n        this.setState({\r\n            reviewValue: \"\",\r\n            posted: true\r\n        });\r\n\r\n        axios.get(`http://bharatekkhoj.herokuapp.com/api/reviews/${this.state.book_name}/`).then(res => {\r\n            this.setState({\r\n                reviews: res.data\r\n            });\r\n        });\r\n    }\r\n\r\n    closeAlert(e) {\r\n        this.setState({\r\n            posted: false\r\n        });\r\n    }\r\n\r\n    subscribed(e) {\r\n        if (!this.state.subscribed) {\r\n            this.addSubscription();\r\n            this.setState({\r\n                subscribed: true\r\n            });\r\n        }\r\n        else {\r\n            this.deleteSubscription();\r\n            this.setState({\r\n                subscribed: false\r\n            });\r\n        }\r\n    }\r\n\r\n    openDialogBox(e) {\r\n        if (!this.state.purchased) {\r\n            this.setState({\r\n                openDialogBox: true\r\n            });\r\n        }\r\n    }\r\n\r\n    closePurchasedDB(e) {\r\n        this.setState({\r\n            bookPurchased: false\r\n        })\r\n    }\r\n\r\n    closeDialogBox(e) {\r\n        this.setState({\r\n            openDialogBox: false,\r\n            bookPurchased: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout AppBarHeading=\"Book\" AppBarChild={null}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item lg={4} sm={12} alignContent=\"center\">\r\n                            <Typography variant=\"h4\">\r\n                                {this.state.book_name }\r\n                            </Typography>\r\n                            <Typography variant=\"h6\">\r\n                                {\"Publisher: \"+this.state.publisher}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\">\r\n                                {\"Price: Rs.\" + this.state.price}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\">\r\n                                {\"Genre: \" + this.state.genre}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\">\r\n                                {\"Language: \" + this.state.language}\r\n                            </Typography>\r\n                            <Button variant=\"contained\" onClick={ this.openDialogBox} style={{ marginTop: 20 }} color=\"primary\">\r\n                                {\r\n                                    (this.state.purchased) ? \r\n                                        (\r\n                                            <CheckCircleIcon className=\"ButtonIcon\" />\r\n                                        ) :\r\n                                        (\r\n                                                < ShoppingBasketIcon className=\"ButtonIcon\" />\r\n                                        )\r\n                                }\r\n                                {\r\n                                    (this.state.purchased) ?\"Purchased\":\"Purchase\"\r\n                                }\r\n                            </Button>\r\n                            <br />\r\n                            <Tooltip interactive title=\"You will be notified about any new book or an edition from this publisher\">\r\n                                <Button variant=\"contained\" style={{ marginTop: 10 }} color=\"secondary\" onClick={this.subscribed}>\r\n                                    {(this.state.subscribed) ? (<FavoriteBorderIcon className=\"ButtonIcon\"/>):(<FavoriteIcon className=\"ButtonIcon\" />)}\r\n                                    {(this.state.subscribed)?\"Unsubscribe\":\"Subscribe to \"+this.state.publisher}\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        <Grid className=\"gridMiddleItem\" item lg={4} sm={12} alignContent=\"center\">\r\n                            <Typography variant=\"h5\">\r\n                                Synopsis:\r\n                            </Typography>\r\n                            <Typography variant=\"h6\">\r\n                                {this.state.synopsis}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item lg={4} sm={12} alignContent=\"center\">\r\n                            <Typography variant=\"h5\">\r\n                               Read the book?\r\n                            </Typography>\r\n                            <Button href=\"#review_input\" variant=\"contained\" style={{ marginTop: 10 }} color=\"primary\">\r\n                                <RateReviewIcon className=\"ButtonIcon\"/>\r\n                                Rate it and write a review\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div className=\"ReviewContainer\">\r\n                        <Typography align=\"left\" variant=\"h5\">\r\n                            Reviews\r\n                        </Typography>\r\n                        <ListItem id=\"review_input\">\r\n                            <TextField fullWidth multiline color=\"primary\"\r\n                                variant=\"outlined\" placeholder=\"Write a Review\"\r\n                                helperText={\"Note: Writing as \" + this.state.user} onChange={this.onReviewChange}\r\n                                value={this.state.reviewValue} />\r\n                            <Button style={{ marginBottom: 20, marginLeft: 5 }} color=\"secondary\"\r\n                                variant=\"contained\" onClick={this.postReview}>\r\n                                Post\r\n                            </Button>\r\n                        </ListItem>\r\n                        {\r\n                            this.state.reviews.map(\r\n                                review => {\r\n                                    return (\r\n                                        <Review text={review.review} secondaryText={\"Published on \" + review.date_posted}\r\n                                            heading={review.user}/>\r\n                                    );\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n                </Layout>\r\n                <Dialog open={this.state.bookPurchased} onClose={this.closePurchasedDB} onEnter={this.purchaseBook}>\r\n                    <DialogTitle>\r\n                        Book Purchased\r\n                    </DialogTitle>\r\n                    <DialogContent >\r\n                        <DialogContentText>\r\n                            {\"Thank you for purchasing \" +this.state.book_name}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" onClick={this.closePurchasedDB}>Okay</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog open={this.state.openDialogBox} onClose={this.closeDialogBox}>\r\n                    <DialogTitle>\r\n                        Module not yet implemented\r\n                    </DialogTitle>\r\n                    <DialogContent >\r\n                        <DialogContentText>\r\n                            Payment module is not yet implemented\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" onClick={this.closeDialogBox}>Okay</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Snackbar open={this.state.posted} autoHideDuration={5000} onClose={ this.closeAlert}>\r\n                    <Alert severity=\"success\" onClose={this.closeAlert} variant=\"standard\" >\r\n                        Review Posted\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Book;","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\Review.js",["90","91"],"import React from 'react'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { ListItemSecondaryAction, ListSubheader } from '@material-ui/core';\r\n\r\nclass Review extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListItem  dense divider>\r\n                <ListItemSecondaryAction>\r\n                    {this.props.secondaryText}\r\n                </ListItemSecondaryAction>\r\n                <ListItemText primary={this.props.heading} secondary={this.props.text} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Review;","D:\\Desktop\\Projects\\BEK\\Frontend\\bekproj\\src\\Components\\Login.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":26,"column":43,"nodeType":"98","messageId":"99","endLine":26,"endColumn":44,"fix":"100"},{"ruleId":"92","replacedBy":"101"},{"ruleId":"94","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":21,"column":8,"nodeType":"105","messageId":"106","endLine":21,"endColumn":21},{"ruleId":"92","replacedBy":"107"},{"ruleId":"94","replacedBy":"108"},{"ruleId":"103","severity":1,"message":"109","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":14},{"ruleId":"103","severity":1,"message":"110","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":19},{"ruleId":"103","severity":1,"message":"111","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":18},{"ruleId":"103","severity":1,"message":"112","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":16},{"ruleId":"103","severity":1,"message":"113","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":14},{"ruleId":"92","replacedBy":"114"},{"ruleId":"94","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":49,"column":21,"nodeType":"118","messageId":"119","endLine":56,"endColumn":22},{"ruleId":"103","severity":1,"message":"120","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":9,"column":5,"nodeType":"123","messageId":"124","endLine":12,"endColumn":6},{"ruleId":"103","severity":1,"message":"125","line":18,"column":90,"nodeType":"105","messageId":"106","endLine":18,"endColumn":103},{"ruleId":"103","severity":1,"message":"125","line":5,"column":35,"nodeType":"105","messageId":"106","endLine":5,"endColumn":48},{"ruleId":"121","severity":1,"message":"122","line":8,"column":5,"nodeType":"123","messageId":"124","endLine":11,"endColumn":6},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"128","text":"129"},["126"],["127"],"no-unused-vars","'DefaultAppBar' is defined but never used.","Identifier","unusedVar",["126"],["127"],"'Button' is defined but never used.","'CardActions' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'Drawer' is defined but never used.",["126"],["127"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'publishes', 'publishes', 'publishes', 'publishes'.","ArrowFunctionExpression","unsafeRefs","'Container' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ListSubheader' is defined but never used.","no-global-assign","no-unsafe-negation",[747,762],"\r\n            ."]